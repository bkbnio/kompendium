{
  "openapi": "3.1.0",
  "jsonSchemaDialect": "https://json-schema.org/draft/2020-12/schema",
  "info": {
    "title": "Test API",
    "version": "1.33.7",
    "description": "An amazing, fully-ish ðŸ˜‰ generated API spec",
    "termsOfService": "https://example.com",
    "contact": {
      "name": "Homer Simpson",
      "url": "https://gph.is/1NPUDiM",
      "email": "chunkylover53@aol.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/bkbnio/kompendium/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://myawesomeapi.com",
      "description": "Production instance of my API"
    },
    {
      "url": "https://staging.myawesomeapi.com",
      "description": "Where the fun stuff happens"
    }
  ],
  "paths": {
    "/": {
      "post": {
        "tags": [],
        "summary": "This is a summary",
        "description": "This is a description",
        "parameters": [],
        "requestBody": {
          "description": "This is a request description",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRequest"
              },
              "examples": {
                "Testerina": {
                  "value": {
                    "fieldName": {
                      "nesty": "asdf"
                    },
                    "b": 1.5,
                    "aaa": []
                  },
                  "summary": "summary",
                  "description": "description"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "This is a response description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResponse"
                },
                "examples": {
                  "Testerino": {
                    "value": {
                      "c": "Heya"
                    },
                    "summary": "summary",
                    "description": "description"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "webhooks": {},
  "components": {
    "schemas": {
      "TestResponse": {
        "type": "object",
        "properties": {
          "c": {
            "type": "string"
          }
        },
        "required": [
          "c"
        ]
      },
      "TestRequest": {
        "type": "object",
        "properties": {
          "aaa": {
            "items": {
              "type": "number",
              "format": "int64"
            },
            "type": "array"
          },
          "b": {
            "type": "number",
            "format": "double"
          },
          "fieldName": {
            "$ref": "#/components/schemas/TestNested"
          }
        },
        "required": [
          "aaa",
          "b",
          "fieldName"
        ]
      },
      "TestNested": {
        "type": "object",
        "properties": {
          "nesty": {
            "type": "string"
          }
        },
        "required": [
          "nesty"
        ]
      }
    },
    "securitySchemes": {}
  },
  "security": [],
  "tags": []
}
