// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io/bkbn/kompendium/protobufjavaconverter/converters/test.proto

package io.bkbn.kompendium.protobufjavaconverter;

/**
 * Protobuf type {@code io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage}
 */
public final class SimpleTestMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)
    SimpleTestMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SimpleTestMessage.newBuilder() to construct.
  private SimpleTestMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SimpleTestMessage() {
    myTestBytes_ = com.google.protobuf.ByteString.EMPTY;
    myTestString_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SimpleTestMessage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SimpleTestMessage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 9: {

            myTestDouble_ = input.readDouble();
            break;
          }
          case 21: {

            myTestFloat_ = input.readFloat();
            break;
          }
          case 24: {

            myTestInt32_ = input.readInt32();
            break;
          }
          case 32: {

            myTestInt64_ = input.readInt64();
            break;
          }
          case 40: {

            myTestUint32_ = input.readUInt32();
            break;
          }
          case 48: {

            myTestUint64_ = input.readUInt64();
            break;
          }
          case 56: {

            myTestSint32_ = input.readSInt32();
            break;
          }
          case 64: {

            myTestSint64_ = input.readSInt64();
            break;
          }
          case 77: {

            myTestFixed32_ = input.readFixed32();
            break;
          }
          case 81: {

            myTestFixed64_ = input.readFixed64();
            break;
          }
          case 93: {

            myTestSfixed32_ = input.readSFixed32();
            break;
          }
          case 97: {

            myTestSfixed64_ = input.readSFixed64();
            break;
          }
          case 104: {

            myTestBool_ = input.readBool();
            break;
          }
          case 114: {

            myTestBytes_ = input.readBytes();
            break;
          }
          case 122: {
            java.lang.String s = input.readStringRequireUtf8();

            myTestString_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.bkbn.kompendium.protobufjavaconverter.Test.internal_static_io_bkbn_kompendium_protobufjavaconverter_SimpleTestMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.bkbn.kompendium.protobufjavaconverter.Test.internal_static_io_bkbn_kompendium_protobufjavaconverter_SimpleTestMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.class, io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.Builder.class);
  }

  public static final int MY_TEST_DOUBLE_FIELD_NUMBER = 1;
  private double myTestDouble_;
  /**
   * <code>double my_test_double = 1;</code>
   * @return The myTestDouble.
   */
  @java.lang.Override
  public double getMyTestDouble() {
    return myTestDouble_;
  }

  public static final int MY_TEST_FLOAT_FIELD_NUMBER = 2;
  private float myTestFloat_;
  /**
   * <code>float my_test_float = 2;</code>
   * @return The myTestFloat.
   */
  @java.lang.Override
  public float getMyTestFloat() {
    return myTestFloat_;
  }

  public static final int MY_TEST_INT32_FIELD_NUMBER = 3;
  private int myTestInt32_;
  /**
   * <code>int32 my_test_int32 = 3;</code>
   * @return The myTestInt32.
   */
  @java.lang.Override
  public int getMyTestInt32() {
    return myTestInt32_;
  }

  public static final int MY_TEST_INT64_FIELD_NUMBER = 4;
  private long myTestInt64_;
  /**
   * <code>int64 my_test_int64 = 4;</code>
   * @return The myTestInt64.
   */
  @java.lang.Override
  public long getMyTestInt64() {
    return myTestInt64_;
  }

  public static final int MY_TEST_UINT32_FIELD_NUMBER = 5;
  private int myTestUint32_;
  /**
   * <code>uint32 my_test_uint32 = 5;</code>
   * @return The myTestUint32.
   */
  @java.lang.Override
  public int getMyTestUint32() {
    return myTestUint32_;
  }

  public static final int MY_TEST_UINT64_FIELD_NUMBER = 6;
  private long myTestUint64_;
  /**
   * <code>uint64 my_test_uint64 = 6;</code>
   * @return The myTestUint64.
   */
  @java.lang.Override
  public long getMyTestUint64() {
    return myTestUint64_;
  }

  public static final int MY_TEST_SINT32_FIELD_NUMBER = 7;
  private int myTestSint32_;
  /**
   * <code>sint32 my_test_sint32 = 7;</code>
   * @return The myTestSint32.
   */
  @java.lang.Override
  public int getMyTestSint32() {
    return myTestSint32_;
  }

  public static final int MY_TEST_SINT64_FIELD_NUMBER = 8;
  private long myTestSint64_;
  /**
   * <code>sint64 my_test_sint64 = 8;</code>
   * @return The myTestSint64.
   */
  @java.lang.Override
  public long getMyTestSint64() {
    return myTestSint64_;
  }

  public static final int MY_TEST_FIXED32_FIELD_NUMBER = 9;
  private int myTestFixed32_;
  /**
   * <code>fixed32 my_test_fixed32 = 9;</code>
   * @return The myTestFixed32.
   */
  @java.lang.Override
  public int getMyTestFixed32() {
    return myTestFixed32_;
  }

  public static final int MY_TEST_FIXED64_FIELD_NUMBER = 10;
  private long myTestFixed64_;
  /**
   * <code>fixed64 my_test_fixed64 = 10;</code>
   * @return The myTestFixed64.
   */
  @java.lang.Override
  public long getMyTestFixed64() {
    return myTestFixed64_;
  }

  public static final int MY_TEST_SFIXED32_FIELD_NUMBER = 11;
  private int myTestSfixed32_;
  /**
   * <code>sfixed32 my_test_sfixed32 = 11;</code>
   * @return The myTestSfixed32.
   */
  @java.lang.Override
  public int getMyTestSfixed32() {
    return myTestSfixed32_;
  }

  public static final int MY_TEST_SFIXED64_FIELD_NUMBER = 12;
  private long myTestSfixed64_;
  /**
   * <code>sfixed64 my_test_sfixed64 = 12;</code>
   * @return The myTestSfixed64.
   */
  @java.lang.Override
  public long getMyTestSfixed64() {
    return myTestSfixed64_;
  }

  public static final int MY_TEST_BOOL_FIELD_NUMBER = 13;
  private boolean myTestBool_;
  /**
   * <code>bool my_test_bool = 13;</code>
   * @return The myTestBool.
   */
  @java.lang.Override
  public boolean getMyTestBool() {
    return myTestBool_;
  }

  public static final int MY_TEST_BYTES_FIELD_NUMBER = 14;
  private com.google.protobuf.ByteString myTestBytes_;
  /**
   * <code>bytes my_test_bytes = 14;</code>
   * @return The myTestBytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMyTestBytes() {
    return myTestBytes_;
  }

  public static final int MY_TEST_STRING_FIELD_NUMBER = 15;
  private volatile java.lang.Object myTestString_;
  /**
   * <code>string my_test_string = 15;</code>
   * @return The myTestString.
   */
  @java.lang.Override
  public java.lang.String getMyTestString() {
    java.lang.Object ref = myTestString_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      myTestString_ = s;
      return s;
    }
  }
  /**
   * <code>string my_test_string = 15;</code>
   * @return The bytes for myTestString.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMyTestStringBytes() {
    java.lang.Object ref = myTestString_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      myTestString_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (myTestDouble_ != 0D) {
      output.writeDouble(1, myTestDouble_);
    }
    if (myTestFloat_ != 0F) {
      output.writeFloat(2, myTestFloat_);
    }
    if (myTestInt32_ != 0) {
      output.writeInt32(3, myTestInt32_);
    }
    if (myTestInt64_ != 0L) {
      output.writeInt64(4, myTestInt64_);
    }
    if (myTestUint32_ != 0) {
      output.writeUInt32(5, myTestUint32_);
    }
    if (myTestUint64_ != 0L) {
      output.writeUInt64(6, myTestUint64_);
    }
    if (myTestSint32_ != 0) {
      output.writeSInt32(7, myTestSint32_);
    }
    if (myTestSint64_ != 0L) {
      output.writeSInt64(8, myTestSint64_);
    }
    if (myTestFixed32_ != 0) {
      output.writeFixed32(9, myTestFixed32_);
    }
    if (myTestFixed64_ != 0L) {
      output.writeFixed64(10, myTestFixed64_);
    }
    if (myTestSfixed32_ != 0) {
      output.writeSFixed32(11, myTestSfixed32_);
    }
    if (myTestSfixed64_ != 0L) {
      output.writeSFixed64(12, myTestSfixed64_);
    }
    if (myTestBool_ != false) {
      output.writeBool(13, myTestBool_);
    }
    if (!myTestBytes_.isEmpty()) {
      output.writeBytes(14, myTestBytes_);
    }
    if (!getMyTestStringBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 15, myTestString_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (myTestDouble_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, myTestDouble_);
    }
    if (myTestFloat_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, myTestFloat_);
    }
    if (myTestInt32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, myTestInt32_);
    }
    if (myTestInt64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, myTestInt64_);
    }
    if (myTestUint32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, myTestUint32_);
    }
    if (myTestUint64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, myTestUint64_);
    }
    if (myTestSint32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(7, myTestSint32_);
    }
    if (myTestSint64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(8, myTestSint64_);
    }
    if (myTestFixed32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed32Size(9, myTestFixed32_);
    }
    if (myTestFixed64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(10, myTestFixed64_);
    }
    if (myTestSfixed32_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed32Size(11, myTestSfixed32_);
    }
    if (myTestSfixed64_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSFixed64Size(12, myTestSfixed64_);
    }
    if (myTestBool_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(13, myTestBool_);
    }
    if (!myTestBytes_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(14, myTestBytes_);
    }
    if (!getMyTestStringBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, myTestString_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)) {
      return super.equals(obj);
    }
    io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage other = (io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage) obj;

    if (java.lang.Double.doubleToLongBits(getMyTestDouble())
        != java.lang.Double.doubleToLongBits(
            other.getMyTestDouble())) return false;
    if (java.lang.Float.floatToIntBits(getMyTestFloat())
        != java.lang.Float.floatToIntBits(
            other.getMyTestFloat())) return false;
    if (getMyTestInt32()
        != other.getMyTestInt32()) return false;
    if (getMyTestInt64()
        != other.getMyTestInt64()) return false;
    if (getMyTestUint32()
        != other.getMyTestUint32()) return false;
    if (getMyTestUint64()
        != other.getMyTestUint64()) return false;
    if (getMyTestSint32()
        != other.getMyTestSint32()) return false;
    if (getMyTestSint64()
        != other.getMyTestSint64()) return false;
    if (getMyTestFixed32()
        != other.getMyTestFixed32()) return false;
    if (getMyTestFixed64()
        != other.getMyTestFixed64()) return false;
    if (getMyTestSfixed32()
        != other.getMyTestSfixed32()) return false;
    if (getMyTestSfixed64()
        != other.getMyTestSfixed64()) return false;
    if (getMyTestBool()
        != other.getMyTestBool()) return false;
    if (!getMyTestBytes()
        .equals(other.getMyTestBytes())) return false;
    if (!getMyTestString()
        .equals(other.getMyTestString())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MY_TEST_DOUBLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMyTestDouble()));
    hash = (37 * hash) + MY_TEST_FLOAT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMyTestFloat());
    hash = (37 * hash) + MY_TEST_INT32_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestInt32();
    hash = (37 * hash) + MY_TEST_INT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMyTestInt64());
    hash = (37 * hash) + MY_TEST_UINT32_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestUint32();
    hash = (37 * hash) + MY_TEST_UINT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMyTestUint64());
    hash = (37 * hash) + MY_TEST_SINT32_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestSint32();
    hash = (37 * hash) + MY_TEST_SINT64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMyTestSint64());
    hash = (37 * hash) + MY_TEST_FIXED32_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestFixed32();
    hash = (37 * hash) + MY_TEST_FIXED64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMyTestFixed64());
    hash = (37 * hash) + MY_TEST_SFIXED32_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestSfixed32();
    hash = (37 * hash) + MY_TEST_SFIXED64_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMyTestSfixed64());
    hash = (37 * hash) + MY_TEST_BOOL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getMyTestBool());
    hash = (37 * hash) + MY_TEST_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestBytes().hashCode();
    hash = (37 * hash) + MY_TEST_STRING_FIELD_NUMBER;
    hash = (53 * hash) + getMyTestString().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)
      io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.bkbn.kompendium.protobufjavaconverter.Test.internal_static_io_bkbn_kompendium_protobufjavaconverter_SimpleTestMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.bkbn.kompendium.protobufjavaconverter.Test.internal_static_io_bkbn_kompendium_protobufjavaconverter_SimpleTestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.class, io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.Builder.class);
    }

    // Construct using io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      myTestDouble_ = 0D;

      myTestFloat_ = 0F;

      myTestInt32_ = 0;

      myTestInt64_ = 0L;

      myTestUint32_ = 0;

      myTestUint64_ = 0L;

      myTestSint32_ = 0;

      myTestSint64_ = 0L;

      myTestFixed32_ = 0;

      myTestFixed64_ = 0L;

      myTestSfixed32_ = 0;

      myTestSfixed64_ = 0L;

      myTestBool_ = false;

      myTestBytes_ = com.google.protobuf.ByteString.EMPTY;

      myTestString_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.bkbn.kompendium.protobufjavaconverter.Test.internal_static_io_bkbn_kompendium_protobufjavaconverter_SimpleTestMessage_descriptor;
    }

    @java.lang.Override
    public io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage getDefaultInstanceForType() {
      return io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.getDefaultInstance();
    }

    @java.lang.Override
    public io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage build() {
      io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage buildPartial() {
      io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage result = new io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage(this);
      result.myTestDouble_ = myTestDouble_;
      result.myTestFloat_ = myTestFloat_;
      result.myTestInt32_ = myTestInt32_;
      result.myTestInt64_ = myTestInt64_;
      result.myTestUint32_ = myTestUint32_;
      result.myTestUint64_ = myTestUint64_;
      result.myTestSint32_ = myTestSint32_;
      result.myTestSint64_ = myTestSint64_;
      result.myTestFixed32_ = myTestFixed32_;
      result.myTestFixed64_ = myTestFixed64_;
      result.myTestSfixed32_ = myTestSfixed32_;
      result.myTestSfixed64_ = myTestSfixed64_;
      result.myTestBool_ = myTestBool_;
      result.myTestBytes_ = myTestBytes_;
      result.myTestString_ = myTestString_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage) {
        return mergeFrom((io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage other) {
      if (other == io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage.getDefaultInstance()) return this;
      if (other.getMyTestDouble() != 0D) {
        setMyTestDouble(other.getMyTestDouble());
      }
      if (other.getMyTestFloat() != 0F) {
        setMyTestFloat(other.getMyTestFloat());
      }
      if (other.getMyTestInt32() != 0) {
        setMyTestInt32(other.getMyTestInt32());
      }
      if (other.getMyTestInt64() != 0L) {
        setMyTestInt64(other.getMyTestInt64());
      }
      if (other.getMyTestUint32() != 0) {
        setMyTestUint32(other.getMyTestUint32());
      }
      if (other.getMyTestUint64() != 0L) {
        setMyTestUint64(other.getMyTestUint64());
      }
      if (other.getMyTestSint32() != 0) {
        setMyTestSint32(other.getMyTestSint32());
      }
      if (other.getMyTestSint64() != 0L) {
        setMyTestSint64(other.getMyTestSint64());
      }
      if (other.getMyTestFixed32() != 0) {
        setMyTestFixed32(other.getMyTestFixed32());
      }
      if (other.getMyTestFixed64() != 0L) {
        setMyTestFixed64(other.getMyTestFixed64());
      }
      if (other.getMyTestSfixed32() != 0) {
        setMyTestSfixed32(other.getMyTestSfixed32());
      }
      if (other.getMyTestSfixed64() != 0L) {
        setMyTestSfixed64(other.getMyTestSfixed64());
      }
      if (other.getMyTestBool() != false) {
        setMyTestBool(other.getMyTestBool());
      }
      if (other.getMyTestBytes() != com.google.protobuf.ByteString.EMPTY) {
        setMyTestBytes(other.getMyTestBytes());
      }
      if (!other.getMyTestString().isEmpty()) {
        myTestString_ = other.myTestString_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double myTestDouble_ ;
    /**
     * <code>double my_test_double = 1;</code>
     * @return The myTestDouble.
     */
    @java.lang.Override
    public double getMyTestDouble() {
      return myTestDouble_;
    }
    /**
     * <code>double my_test_double = 1;</code>
     * @param value The myTestDouble to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestDouble(double value) {
      
      myTestDouble_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double my_test_double = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestDouble() {
      
      myTestDouble_ = 0D;
      onChanged();
      return this;
    }

    private float myTestFloat_ ;
    /**
     * <code>float my_test_float = 2;</code>
     * @return The myTestFloat.
     */
    @java.lang.Override
    public float getMyTestFloat() {
      return myTestFloat_;
    }
    /**
     * <code>float my_test_float = 2;</code>
     * @param value The myTestFloat to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestFloat(float value) {
      
      myTestFloat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float my_test_float = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestFloat() {
      
      myTestFloat_ = 0F;
      onChanged();
      return this;
    }

    private int myTestInt32_ ;
    /**
     * <code>int32 my_test_int32 = 3;</code>
     * @return The myTestInt32.
     */
    @java.lang.Override
    public int getMyTestInt32() {
      return myTestInt32_;
    }
    /**
     * <code>int32 my_test_int32 = 3;</code>
     * @param value The myTestInt32 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestInt32(int value) {
      
      myTestInt32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 my_test_int32 = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestInt32() {
      
      myTestInt32_ = 0;
      onChanged();
      return this;
    }

    private long myTestInt64_ ;
    /**
     * <code>int64 my_test_int64 = 4;</code>
     * @return The myTestInt64.
     */
    @java.lang.Override
    public long getMyTestInt64() {
      return myTestInt64_;
    }
    /**
     * <code>int64 my_test_int64 = 4;</code>
     * @param value The myTestInt64 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestInt64(long value) {
      
      myTestInt64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 my_test_int64 = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestInt64() {
      
      myTestInt64_ = 0L;
      onChanged();
      return this;
    }

    private int myTestUint32_ ;
    /**
     * <code>uint32 my_test_uint32 = 5;</code>
     * @return The myTestUint32.
     */
    @java.lang.Override
    public int getMyTestUint32() {
      return myTestUint32_;
    }
    /**
     * <code>uint32 my_test_uint32 = 5;</code>
     * @param value The myTestUint32 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestUint32(int value) {
      
      myTestUint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 my_test_uint32 = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestUint32() {
      
      myTestUint32_ = 0;
      onChanged();
      return this;
    }

    private long myTestUint64_ ;
    /**
     * <code>uint64 my_test_uint64 = 6;</code>
     * @return The myTestUint64.
     */
    @java.lang.Override
    public long getMyTestUint64() {
      return myTestUint64_;
    }
    /**
     * <code>uint64 my_test_uint64 = 6;</code>
     * @param value The myTestUint64 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestUint64(long value) {
      
      myTestUint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 my_test_uint64 = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestUint64() {
      
      myTestUint64_ = 0L;
      onChanged();
      return this;
    }

    private int myTestSint32_ ;
    /**
     * <code>sint32 my_test_sint32 = 7;</code>
     * @return The myTestSint32.
     */
    @java.lang.Override
    public int getMyTestSint32() {
      return myTestSint32_;
    }
    /**
     * <code>sint32 my_test_sint32 = 7;</code>
     * @param value The myTestSint32 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestSint32(int value) {
      
      myTestSint32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 my_test_sint32 = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestSint32() {
      
      myTestSint32_ = 0;
      onChanged();
      return this;
    }

    private long myTestSint64_ ;
    /**
     * <code>sint64 my_test_sint64 = 8;</code>
     * @return The myTestSint64.
     */
    @java.lang.Override
    public long getMyTestSint64() {
      return myTestSint64_;
    }
    /**
     * <code>sint64 my_test_sint64 = 8;</code>
     * @param value The myTestSint64 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestSint64(long value) {
      
      myTestSint64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint64 my_test_sint64 = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestSint64() {
      
      myTestSint64_ = 0L;
      onChanged();
      return this;
    }

    private int myTestFixed32_ ;
    /**
     * <code>fixed32 my_test_fixed32 = 9;</code>
     * @return The myTestFixed32.
     */
    @java.lang.Override
    public int getMyTestFixed32() {
      return myTestFixed32_;
    }
    /**
     * <code>fixed32 my_test_fixed32 = 9;</code>
     * @param value The myTestFixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestFixed32(int value) {
      
      myTestFixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>fixed32 my_test_fixed32 = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestFixed32() {
      
      myTestFixed32_ = 0;
      onChanged();
      return this;
    }

    private long myTestFixed64_ ;
    /**
     * <code>fixed64 my_test_fixed64 = 10;</code>
     * @return The myTestFixed64.
     */
    @java.lang.Override
    public long getMyTestFixed64() {
      return myTestFixed64_;
    }
    /**
     * <code>fixed64 my_test_fixed64 = 10;</code>
     * @param value The myTestFixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestFixed64(long value) {
      
      myTestFixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>fixed64 my_test_fixed64 = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestFixed64() {
      
      myTestFixed64_ = 0L;
      onChanged();
      return this;
    }

    private int myTestSfixed32_ ;
    /**
     * <code>sfixed32 my_test_sfixed32 = 11;</code>
     * @return The myTestSfixed32.
     */
    @java.lang.Override
    public int getMyTestSfixed32() {
      return myTestSfixed32_;
    }
    /**
     * <code>sfixed32 my_test_sfixed32 = 11;</code>
     * @param value The myTestSfixed32 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestSfixed32(int value) {
      
      myTestSfixed32_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sfixed32 my_test_sfixed32 = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestSfixed32() {
      
      myTestSfixed32_ = 0;
      onChanged();
      return this;
    }

    private long myTestSfixed64_ ;
    /**
     * <code>sfixed64 my_test_sfixed64 = 12;</code>
     * @return The myTestSfixed64.
     */
    @java.lang.Override
    public long getMyTestSfixed64() {
      return myTestSfixed64_;
    }
    /**
     * <code>sfixed64 my_test_sfixed64 = 12;</code>
     * @param value The myTestSfixed64 to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestSfixed64(long value) {
      
      myTestSfixed64_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sfixed64 my_test_sfixed64 = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestSfixed64() {
      
      myTestSfixed64_ = 0L;
      onChanged();
      return this;
    }

    private boolean myTestBool_ ;
    /**
     * <code>bool my_test_bool = 13;</code>
     * @return The myTestBool.
     */
    @java.lang.Override
    public boolean getMyTestBool() {
      return myTestBool_;
    }
    /**
     * <code>bool my_test_bool = 13;</code>
     * @param value The myTestBool to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestBool(boolean value) {
      
      myTestBool_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool my_test_bool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestBool() {
      
      myTestBool_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString myTestBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes my_test_bytes = 14;</code>
     * @return The myTestBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMyTestBytes() {
      return myTestBytes_;
    }
    /**
     * <code>bytes my_test_bytes = 14;</code>
     * @param value The myTestBytes to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      myTestBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bytes my_test_bytes = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestBytes() {
      
      myTestBytes_ = getDefaultInstance().getMyTestBytes();
      onChanged();
      return this;
    }

    private java.lang.Object myTestString_ = "";
    /**
     * <code>string my_test_string = 15;</code>
     * @return The myTestString.
     */
    public java.lang.String getMyTestString() {
      java.lang.Object ref = myTestString_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        myTestString_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string my_test_string = 15;</code>
     * @return The bytes for myTestString.
     */
    public com.google.protobuf.ByteString
        getMyTestStringBytes() {
      java.lang.Object ref = myTestString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        myTestString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string my_test_string = 15;</code>
     * @param value The myTestString to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestString(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      myTestString_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string my_test_string = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearMyTestString() {
      
      myTestString_ = getDefaultInstance().getMyTestString();
      onChanged();
      return this;
    }
    /**
     * <code>string my_test_string = 15;</code>
     * @param value The bytes for myTestString to set.
     * @return This builder for chaining.
     */
    public Builder setMyTestStringBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      myTestString_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)
  }

  // @@protoc_insertion_point(class_scope:io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage)
  private static final io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage();
  }

  public static io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SimpleTestMessage>
      PARSER = new com.google.protobuf.AbstractParser<SimpleTestMessage>() {
    @java.lang.Override
    public SimpleTestMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SimpleTestMessage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SimpleTestMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SimpleTestMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.bkbn.kompendium.protobufjavaconverter.SimpleTestMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

