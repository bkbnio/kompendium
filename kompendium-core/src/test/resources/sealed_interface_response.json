{
  "openapi": "3.0.3",
  "info": {
    "title": "Test API",
    "version": "1.33.7",
    "description": "An amazing, fully-ish ðŸ˜‰ generated API spec",
    "termsOfService": "https://example.com",
    "contact": {
      "name": "Homer Simpson",
      "url": "https://gph.is/1NPUDiM",
      "email": "chunkylover53@aol.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/bkbnio/kompendium/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://myawesomeapi.com",
      "description": "Production instance of my API"
    },
    {
      "url": "https://staging.myawesomeapi.com",
      "description": "Where the fun stuff happens"
    }
  ],
  "paths": {
    "/test/polymorphicmap": {
      "get": {
        "tags": [],
        "summary": "Come on and slam",
        "description": "and welcome to the jam",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A successful endeavor",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "properties": {
                        "a": {
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "a"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "b": {
                          "format": "float",
                          "type": "number"
                        }
                      },
                      "required": [
                        "b"
                      ],
                      "type": "object"
                    },
                    {
                      "properties": {
                        "c": {
                          "anyOf": [
                            {
                              "properties": {
                                "a": {
                                  "format": "int32",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "a"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "b": {
                                  "format": "float",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "b"
                              ],
                              "type": "object"
                            },
                            {
                              "$ref": "#/components/schemas/InsaneJamma"
                            }
                          ]
                        }
                      },
                      "required": [
                        "c"
                      ],
                      "type": "object"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "InsaneJamma": {
        "properties": {
          "c": {
            "anyOf": [
              {
                "properties": {
                  "a": {
                    "format": "int32",
                    "type": "integer"
                  }
                },
                "required": [
                  "a"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "b": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": [
                  "b"
                ],
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/InsaneJamma"
              }
            ]
          }
        },
        "required": [
          "c"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {}
  },
  "security": [],
  "tags": []
}
